import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class projectscses {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        ArrayList<Pair> list = new ArrayList<>();
        for(int i=0;i<n;i++){
            int a = sc.nextInt();
            int b = sc.nextInt();
            int c = sc.nextInt();
            list.add(new Pair(a, b, c));
        }
        Collections.sort(list, (a,b)->{
            return a.second - b.second;
        });

        int[] ends = new int[n];
        for (int i = 0; i < n; i++) {
            ends[i] = list.get(i).second;
        }

        int[] dp = new int[n];

        for (int i = 0; i < n; i++) {
            int currProfit = list.get(i).pro;
            int idx = binarySearch(list, ends, i);

            if (idx != -1) {
                currProfit += dp[idx];
            }

            dp[i] = Math.max((i > 0 ? dp[i - 1] : 0), currProfit);
        }

        System.out.println(dp[n - 1]); 

    }

    private static int binarySearch(ArrayList<Pair> list, int[] ends, int i) {
        int low = 0, high = i - 1, ans = -1;
        int target = list.get(i).first;

        while (low <= high) {
            int mid = (low + high) / 2;
            if (ends[mid] < target) {
                ans = mid;
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return ans;
    }
}

class Pair{
    int first;
    int second;
    int pro;
    public Pair(int f, int s, int p){
        first = f;
        second = s;
        pro = p;
    }
}
